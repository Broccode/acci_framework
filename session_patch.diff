--- crates/auth/src/session/mod.rs
+++ crates/auth/src/session/mod.rs
@@ -285,6 +285,7 @@ impl PostgresSessionRepository {
                 is_valid: row.is_valid,
                 invalidated_reason: row.invalidation_reason,
                 metadata: row.metadata,
+                mfa_status: MfaStatus::None,
             })
         } else {
             Ok(None)
@@ -353,6 +354,7 @@ impl SessionRepository for PostgresSessionRepository {
                     is_valid: row.is_valid,
                     invalidated_reason: row.invalidation_reason,
                     metadata: row.metadata,
+                    mfa_status: MfaStatus::None,
                 }
             }))
         }
@@ -424,6 +426,7 @@ impl SessionRepository for PostgresSessionRepository {
                     is_valid: row.is_valid,
                     invalidated_reason: row.invalidation_reason,
                     metadata: row.metadata,
+                    mfa_status: MfaStatus::None,
                 }
             }))
         }
@@ -507,6 +510,7 @@ impl SessionRepository for PostgresSessionRepository {
                         is_valid: row.is_valid,
                         invalidated_reason: row.invalidation_reason,
                         metadata: row.metadata,
+                        mfa_status: MfaStatus::None,
                     }
                 })
                 .collect(),
@@ -800,6 +804,7 @@ mod tests {
             is_valid: true,
             invalidated_reason: None,
             metadata: None,
+            mfa_status: MfaStatus::None,
         };
         self.mock_sessions.insert(session.id, session.clone());
         session
@@ -826,6 +831,7 @@ mod tests {
             is_valid: true,
             invalidated_reason: None,
             metadata: None,
+            mfa_status: MfaStatus::None,
         };
         session
     }
