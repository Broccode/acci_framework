[package]
name = "acci_auth"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["metrics"]
metrics = ["dep:metrics"]
enable_webauthn = []

[dependencies]
# Core dependencies
anyhow = { workspace = true }
async-trait = { workspace = true }
acci_core = { path = "../core" }
serde = { workspace = true }
serde_json = { workspace = true }
thiserror = { workspace = true }
time = { workspace = true }
tokio = { workspace = true }
tracing = { workspace = true }

# Additional required dependencies
governor = "0.6.0"
lettre = { version = "0.11.4", default-features = false, features = ["smtp-transport", "tokio1", "tokio1-native-tls", "builder"] }
reqwest = { version = "0.11.26", features = ["json"] }
urlencoding = "2.1.3"
base32 = "0.4.0"
totp-rs = "5.5.0"
zxcvbn = "2.0.0"
regex = "1.10.4"
lazy_static = "1.4.0"

# JWT Authentication
jsonwebtoken = { workspace = true }
cookie = "0.18.0"

# Password hashing
argon2 = { workspace = true }
rand_core = { version = "0.6.4", features = ["std"] }

# Storage & database
sqlx = { workspace = true, features = ["chrono"] }

# Metrics and Logging
metrics = { workspace = true, optional = true }

# WebAuthn
webauthn-rs = { workspace = true }
base64 = { workspace = true }

# Geolocation & Enhanced Security
maxminddb = "0.23.0"
chrono = { workspace = true }
redis = { version = "0.24.0", features = ["tokio-comp", "aio", "connection-manager"] }
axum = { version = "0.7.1", features = ["macros"] }
hex = { workspace = true }
sha2 = { workspace = true }
rand = { workspace = true }
hyper = { version = "1.0.1", features = ["full"] }
futures = { workspace = true }
tower = { workspace = true }
uuid = { workspace = true }
