[workspace]
members = [
    "crates/core",
    "crates/auth",
    "crates/api",
    "crates/web",
    "tests"
]
resolver = "2"

[workspace.package]
version = "0.1.1"
edition = "2024"
authors = ["WALLOSCHKE, Michael <michael.walloschke@axians.de>"]
license = "MIT OR Apache-2.0"

[workspace.dependencies]
# Web Framework & Frontend
leptos = { version = "0.7.7", features = ["csr", "ssr", "nightly"] }
leptos_router = { version = "0.7.7" }
leptos_meta = { version = "0.7.7" }

# Backend Framework
axum = { version = "0.8.1", features = ["http2", "macros"] }
axum-core = { version = "0.5.0" }
tower = { version = "0.5.2", features = ["full"] }
tower-http = { version = "0.6.2", features = ["fs", "trace", "cors"] }
hyper = { version = "1.2.0" }
http = { version = "1.0.0" }
http-body = { version = "1.0.0" }
http-body-util = { version = "0.1.0" }
bytes = { version = "1.5.0" }

# Authentication & Security
jsonwebtoken = "9.3.1"
argon2 = "0.5.3"
rand = "0.9.0"
zxcvbn = "3.1.0"
secrecy = "0.8.0"
hex = "0.4.3"
totp-rs = "5.5.1"
base32 = "0.4.0"
base64 = "0.21.7"
sha1 = "0.10.6"
sha2 = "0.10.8"
urlencoding = "2.1.3"
webauthn-rs = "0.5.1"
serde_bytes = "0.11.12"

# Database & Storage
sqlx = { version = "0.8.3", features = ["runtime-tokio-rustls", "postgres", "sqlite", "uuid", "time", "json", "ipnetwork"] }
sea-query = "0.32.2"
uuid = { version = "1.14.0", features = ["v4", "serde"] }

# Async Runtime & Utilities
tokio = { version = "1.43.0", features = ["full"] }
futures = "0.3.31"
async-trait = { version = "0.1.87" }

# Serialization & Data Handling
serde = { version = "1.0.218", features = ["derive"] }
serde_json = "1.0.139"
time = { version = "0.3.37", features = ["serde"] }
chrono = { version = "0.4.36", features = ["serde"] }

# Logging & Monitoring
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.19", features = ["env-filter"] }
metrics = "0.24.1"
metrics-exporter-prometheus = "0.16.2"

# Email & SMS
lettre = { version = "0.11.4", default-features = false, features = ["tokio1", "tokio1-rustls-tls", "builder", "smtp-transport"] }
reqwest = { version = "0.12.4", features = ["json", "rustls-tls"] }

# Error Handling
thiserror = "2.0.11"
anyhow = "1.0.96"

# Configuration & Environment
config = "0.15.8"
dotenvy = "0.15.7"

# Testing
tokio-test = "0.4.4"
rstest = "0.24.0"
mockall = "0.13.1"
tracing-test = "0.2.4"
pretty_assertions = "1.4.0"

# Security & SBOM
cyclonedx-bom = "0.8.0"

# Database Testing
testcontainers = { version = "0.23.3" }
testcontainers-modules = { version = "0.11.6", features = ["postgres"] }
once_cell = "1.20"

# Validation & Utils
regex = "1.10"
lazy_static = "1.4"
governor = "0.8.0"
validator = { version = "0.20.0", features = ["derive"] }


# Build Dependencies
proc-macro2 = "1.0"
quote = "1.0"
syn = { version = "2.0", features = ["full"] }

[package]
name = "acci_framework"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true

[dependencies]
# Core dependencies for the main binary
tokio = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
config = { workspace = true }
dotenvy = { workspace = true }
acci_core = { path = "crates/core" }
acci_auth = { path = "crates/auth" }
acci_api = { path = "crates/api" }
acci_web = { path = "crates/web" }
lazy_static.workspace = true
regex = { workspace = true, features = ["unicode-perl"] }
jsonwebtoken.workspace = true
serde_bytes.workspace = true

[dev-dependencies]
criterion = { version = "0.5.1", features = ["async_tokio"] }
uuid = { workspace = true }
time = { workspace = true }
sqlx = { workspace = true }

[[bench]]
name = "auth_flow_bench"
harness = false
